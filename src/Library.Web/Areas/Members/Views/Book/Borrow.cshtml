@model BookListViewModel
@using Newtonsoft.Json

<div class="row">    
    <div class="col-md-3">
        <div class="card">
            <h4 class="card-header">Borrow Books</h4>
            <div class="card-block">
                <form asp-action="Borrow" asp-controller="Book" method="GET">
                    <div class="form-group">
                        <select asp-for="SearchOptions.Location" asp-items="Model.SearchOptions.Locations" class="form-control">
                            <option value="">All locations</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <input asp-for="SearchOptions.Phrase" type="text" class="form-control no-border-radius" placeholder="Search">
                    </div>
                    <div class="form-group"><button type="submit" class="btn btn-primary">Search</button></div>
                </form>         
            </div>        
        </div>
    </div>
    <div class="col-md-9 px-0">
        @Html.Partial("_BorrowList", @Model.Books)
    </div>
    
</div>

@Html.Partial("_Modal", new BootstrapModel { ID = "previewBook", AreaLabeledId = "modal-action-preview-book-label", Size = ModalSize.Medium })

@section Styles {
    <link rel="stylesheet" href="https://cdn.datatables.net/1.10.13/css/jquery.dataTables.min.css">
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/v/bs/dt-1.10.13/af-2.1.3/b-1.2.4/b-colvis-1.2.4/b-flash-1.2.4/b-print-1.2.4/cr-1.3.2/r-2.1.1/se-1.2.0/datatables.min.css"/>
}
@section Scripts {
    <script src="~/js/bookClientManager.js" asp-append-version="true"></script>
    <script src="~/js/modal.js" asp-append-version="true"></script>
    <script type="text/javascript">
        document.addEventListener("DOMContentLoaded", function(event) {
            BookClientManager.initialize('@Model.SortFilterPageData.FilterBy','@Model.SortFilterPageData.FilterValue','@Url.Action("GetSearchContent")')
            Modal.init("previewBook");
            toggleButtonState("none")            
        })
        $(function(){
            $(".form-check-input.book-item-check").change(function(e){
                $(this).closest('tr').find("div.form-group").css("display","none");
                if($(this).prop("checked")){
                    $(this).closest('tr').find("div.form-group").css("display","block");
                }
            })
        })
        function showBorrowButton(){
                let selectedCheckBoxes = $(".form-check-input.book-item-check:checked").length
                if(selectedCheckBoxes > 0){
                    if(selectedCheckBoxes == 3){
                        $('.form-check-input.book-item-check:not(:checked)').prop('disabled', true); 
                    }else{
                        $('.form-check-input.book-item-check:not(:checked)').prop('disabled', false); 
                    }                     
                    toggleButtonState("block");
                }else{
                    toggleButtonState("none")
                }
        }
        function toggleButtonState(state) {
            $("#submitBooks").css("display", state);
        }
    </script>
}